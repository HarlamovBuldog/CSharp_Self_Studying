//Общая модель в голове
>/
View First берем, потому что не до конца понятен функционал
1) View:
 - Dock Panel + Grid + Stock Panel (можно взять вьюшку с примера с Хабра).
 - Скорее всего 2 xaml будет. Одна юзерка будет брать шаблоны с Мэйна.
 - В юзерке будут динамически появляться кнопки, по нажатию на которые идет переброс
в новое окно с созданием группы, а в группе динамически будут создаваться товары конкретной группы.
Для товаров, аналогично группам, при нажатии будет появляться окно с добавлением фото + инфа.
Тут возникает вопрос как сделать этот переброс. Всё-таки нужен трансфер и может не юзерка, а страницы.
Вообщем остаются вопросы. Каким-то образом ещё нужно организовать генерацию страниц, потому что как только 
на одной странице заканчивается место, должна создаватсья вторая страница и переходка. Причем схема схожая 
для группы и для товаров. Тоесть будут похожие темплэйты.
2) Model:
 - В модели однозначно должна хранится коллекция групп и товаров внутри групп. Причём коллекция должна заноситься
 в БД, чтобы при повторном открытии она подгружалась.
 - Нужен также функционал по созданию XML-файла, фаблон которого ещё надо взять и понять как именно он генерируется.
 - Я так понимаю, что нужны ещё функции редактирования всех элементов однозначно (групп и элементов внутри них).
3) VM:
 - Ну тут бы ещё разобраться все-таки до конца, что в VM, а что в Model.
 - По факту здесь привязки, работа с коллекциями, все raise event.
/<

/*
 А так вообщем, продебажить последний примерс Хабра фулл, понять как это всё работает.
 Очень дотошно понять. Каждую функцию, каждую строчку. Пооставлять комменты.
 Особенно райз ивентов, сама реализация паттерна и делегаты.

 Можно ещё профессор-вэб чекнуть и английский сайт на наличие инфы по динамическим страницам.
 Ещё бы по полочкам разобрать Prism в идеале. Потому что используется в этих примерах.
*/

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
По хорошему, мэйби на выходных надо поднимать базу c#+wpf
Можно конечно и дальше пытаться делать все на ходу, но
чем больше идешь дальше, тем больше вопросов. Мэйби это норм конечно.
Но рано или поздно я могу так повиснуть. Просто меня напрягает тот факт, что
я толком не понимаю, что происходит в проге. А это хреново, потому что ты не можешь 
контролировать код и то, что происходит впринципе.
Ещё возникла проблема с подключением к базе данных. Проблема в том, что локально подключаться к БД не самый
лучший вариант, в идеале было бы кодом это делать, тем более, что у меня будет подключение к нескольким БД.
Важно понять как Notify пробрасываются, а то чет я не бум-бум
Короче нужны гайдики, потому что всё контролить нужно, в том числе разбираться во всех файлах настройки 
и подгружать .dll, ибо это очень важно для будущего развертывания. 
Статейки Джон Смита и его проект-пример шикарен, прям чувствуется.
Осталось только фулл в нём разобраться и попробовать добавлять по-тихоньку свою логику. В чём впринципе 
и заключается сложность. Читать и разбираться, разбираться и читать, - всё, что остается.
Как вариант конечно найти видео с пошаговым руководством и созданием приложения. Но опять же скорее всего там будет 
другая логика и другой код. Есть видосик с MSDN с использованием Prism разве что.
Короче всё свелось к тому, что мне надо хотя бы присоединиться к БД и построить сеть из кнопок, каждая из которых
будет иметь контент в себе(тоесть название группы) и будет запускать триггер, теость переходить к элементам группы, где
так же будут выстроены кнопки элементов группы.
(Пора уже записывать дату этих записей сумасшедшего)

>/ 12/09/18
Короче с нуля поднять сложно, да и фишка в том, что у каждого "Тутора" свои методы связи элементов паттерна, в особенности
это касается навигации. Остановился на том, что надо править проект Josh Smith-та (MvvMDemoApp) либо wpf_Entity_Framework/, но там
мне покдлючение к Бд не нравится. По тиху появляется желание просто пересесть на Qt. По сути поактуальнее будет, хотя его тоже
с нуля поднимать надо, так что толку. Думаю легче явно не станет.
/<

>/ 13/09/18
Вообщем логику вроде как внедрить удалось. Ну как удалось, пока что у меня только создается новый TAB при нажатии кнопок слева, 
в котором у меня вывелись кнопки. Всё пока что супер допотопно в плане логики моей основной программы, но хоть какие-то шаги
навстречу. 
Надо теперь продумать как аккуратно без лажи внедрить чилдренят в прикуску к группам (кнопкам). Тут в любом случае нужен
новый класс, скорее всего даже фулл набор. Хоть они и связаны.
Ещё нужно как-то всё-таки тригерить IsSelected для кнопки. Пока что я нашел вариант на stackoverflow с превращением RadioButton 
во FlatButton (ссылка на источник в Телеграмме).
По моим раздумьям команды я каким-то образом должен задавать всё-таки в соответствующей ViewModel.
СМ. файл CustomerViewModel.cs => RelayCommand _saveCommand. В начале будет RelayCommand, который будет байндиться к кнопке.
Все равно в голове каша по поводу пробросов (или поднятий, фиг пойми) ивентов. Из-за этой дыры в понимании сложно двигаться
дальше. Надо ещё почитать про это либо опять пример разобрать, а лучше продебажить текущий.
Кстати касательно выбора и контроля IsSelected, в wpf_Entity_Framework набор кнопок и активация по выбору, тоесть другими словами 
трекинг статуса IsSelected. Вообщем есть куда смотреть, на заметку.
/<

>/ 14/09/18
Вообщем загвоздка главная в том, что в MainViewModel происходит переключение между списками workspace-ов (те же ViewModel). И грубо 
говоря всё переключение между View-ками идет через одно главное окно, в котором впринципе и расположены кнопки. Мне в любом случае нужна
система уходящая вглубь, ибо каждая моя View привязана к ViewModel. Тоесть все объекты будут привязаны к своей ViewModel. Таким образом, 
code-behind, грубо говоря для каждой из View нужно в любом случае прописывать в своей ViewModel. 
Ещё вроде как гениальная идея в голову пришла, ведь Close по сути то же ReturnBack. Тоесть по сути оно просто удаляет Workspace и возвращается
по иерархии выше (если я правильно понял конечно). В любом случае need to try it.
Наследование с использованием шаблонирования, начинаю допирать, зачем оно мне может пригодиться (ссылка на stackoverflow в telegram).
В таком случае даже можно сделать два базовых класса, от которых можно наследоваться. Один для UserControl добавления групп, 
второй для UserControl добавления элементов внутри групп.
В общем в конце концов очередной ступор. Проблема в биндинге вьюшки. Когда я ссылаюсь на Список с типом ГрупВьюМодел, то байдинг на команду
пытается найти эту команду в том же классе, а расписана моя команда в классе ОллГрупсВьюМодел. Короче скорее всего где-то просто логическая ошибка.
Либо вытекла наконец-то ошибка в архитектуре. Не понятно вообщем.
/<
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

//Связка с MS SQL Server (впринципе неактульно уже, потому что мы перешли на SQLite)
>/
Строка подключения:
 Server=localhost\SQLEXPRESS;Database=master;Trusted_Connection=True;

Админы:	
DESKTOP-V5H0EAM\vladwoode
/<

//Мысли на ходу по поводу проги
>/
Так, ладно. Это становится дико сложно. Нужно раскидать задачу на маленькие подзадачки.
1)Сделать кнопку, которая при нажатии будет плодить другие кнопки. Всё это дело выровнять.
2)К этой радости Приделать View Model.
3)Будет легкая БД SQL Lite скоре всего. В ней будут храниться 2 таблицы буквально.
Группы и их дети (по сути сам каталог и товары внутри каждой группы).
4)Функции в главном окне: Add, Edit, Delete, Update.
5)Кнопку добавления большую можно попытаться конечно сделать, но возникла проблема всунуть его DataTemplate.
Не понимаю пока что, как вставить. Пока что будет кнопка добавление маленькая в ToolKit-е над каталогом.
Правда в таком случае опять же нужен тогда ListView, а не Button. При Edit-е будет вылетать UserControl в идеале.
/<